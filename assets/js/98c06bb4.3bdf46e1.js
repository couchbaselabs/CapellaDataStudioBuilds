"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[884],{8754:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>a});var s=t(5893),o=t(1151);const i={},c="Self Managed Couchbase",r={id:"Connections/Couchbase",title:"Self Managed Couchbase",description:"Connect to your Couchbase Self Managed Cluster",source:"@site/docs/Connections/2.Couchbase.md",sourceDirName:"Connections",slug:"/Connections/Couchbase",permalink:"/docs/Connections/Couchbase",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Capella Clusters",permalink:"/docs/Connections/Capella"},next:{title:"Columnar Instances",permalink:"/docs/Connections/Columnar"}},l={},a=[{value:"Connecting to Self Managed Couchbase Clusters",id:"connecting-to-self-managed-couchbase-clusters",level:2},{value:"Connect Form",id:"connect-form",level:2},{value:"The Connection Process",id:"the-connection-process",level:2},{value:"Post Connection",id:"post-connection",level:2},{value:"The Connection Row",id:"the-connection-row",level:3},{value:"The AppBar",id:"the-appbar",level:3},{value:"The Footer Tables",id:"the-footer-tables",level:3},{value:"Tip",id:"tip",level:2}];function h(e){const n={admonition:"admonition",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"self-managed-couchbase",children:"Self Managed Couchbase"}),"\n",(0,s.jsx)(n.p,{children:"Connect to your Couchbase Self Managed Cluster"}),"\n",(0,s.jsx)(n.admonition,{title:"Take care",type:"danger",children:(0,s.jsx)(n.p,{children:"Before trying to connect to a Couchbase Cluster, make sure that you have at least 1 bucket in the cluster."})}),"\n",(0,s.jsx)(n.h2,{id:"connecting-to-self-managed-couchbase-clusters",children:"Connecting to Self Managed Couchbase Clusters"}),"\n",(0,s.jsxs)(n.p,{children:["From the ",(0,s.jsx)(n.strong,{children:"Add Connection"})," drop-down button, choose Couchbase Self Managed\n",(0,s.jsx)(n.img,{alt:"Self Managed",src:t(5994).Z+"",width:"3072",height:"546"})]}),"\n",(0,s.jsx)(n.h2,{id:"connect-form",children:"Connect Form"}),"\n",(0,s.jsx)("img",{src:"/img/connect/self-managed-connect-form.png",width:"400",alt:"Self Managed Form"}),"\n",(0,s.jsxs)(n.p,{children:["The above example shows a connection to a cluster running on VMs, so the IP address and one node has been specified.",(0,s.jsx)("br",{}),"\nIf your self managed cluster is runnning on Cloud, AWS for instance, enter the hostname of any node in the cluster.",(0,s.jsx)("br",{}),"\nIf you are running Couchbase Server on Docker, you can enter ",(0,s.jsx)(n.em,{children:"localhost"})," as hostname",(0,s.jsx)("br",{}),"\nThe ",(0,s.jsx)(n.strong,{children:"SSL certificate"})," is optional."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If you enter the wrong IP address or wrong userid/password, an appropriate error message will pop up."}),"\n",(0,s.jsx)(n.li,{children:"If using SSL, make sure the appropriate ports are open, for example: 11207 etc. Refer Couchbase Server documentation for a full list of ports used by SSL."}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"the-connection-process",children:"The Connection Process"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Capella DataStudio connects to the cluster using the form details."}),"\n",(0,s.jsx)(n.li,{children:"It fetches the details of all the existing buckets (scopes and collections)"}),"\n",(0,s.jsxs)(n.li,{children:["The list of buckets is fetched ",(0,s.jsx)(n.strong,{children:"only"})," at connection time.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Any buckets added from the Couchbase UI will not get reflected in Capella DataStudio. In this case, you will have to ",(0,s.jsx)(n.strong,{children:"refresh"})," the connection."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["All details are kept in a encrypted ",(0,s.jsx)(n.em,{children:"DataStudio Store"})," locally."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"post-connection",children:"Post Connection"}),"\n",(0,s.jsxs)(n.p,{children:["If your connection is successful, you will see the details in the Main Panel.\n",(0,s.jsx)(n.img,{alt:"Self Managed Details",src:t(3175).Z+"",width:"3072",height:"1716"}),"\nLets now take a look at the details provided"]}),"\n",(0,s.jsx)(n.h3,{id:"the-connection-row",children:"The Connection Row"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.strong,{children:"Radio Button"})," on the start of the row to choose the connection."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["This now is the ",(0,s.jsx)(n.strong,{children:"Active Connection"}),"\nThe row shows the details, including the services which this cluster is running.\nAt the end of the row, there are 3 action buttons:"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Refresh"}),": This deletes all the connection details from the ",(0,s.jsx)(n.em,{children:"DataStudio Store"})," and reconnects. YOu will typically be using this under these scenarios:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Buckets have been added/deleted directly from the Couchbase Server UI"}),"\n",(0,s.jsx)(n.li,{children:"The cluster topology has changed, either by adding or taking away nodes"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Edit"}),": This only allows you to change the userid/password."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Delete"}),": This deletes all the connection details from the ",(0,s.jsx)(n.em,{children:"DataStudio Store"}),". Note that this action has no effect on the actual cluster itself."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"the-appbar",children:"The AppBar"}),"\n",(0,s.jsxs)(n.p,{children:["The AppBar shows the details of the ",(0,s.jsx)(n.strong,{children:"Active Connection"}),"\nIt also shows the ",(0,s.jsx)(n.strong,{children:"Active Database"})," (aka Bucket) and the ",(0,s.jsx)(n.strong,{children:"Active Scope"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"These are chosen randomly during the connection process."}),"\n",(0,s.jsxs)(n.li,{children:["Remember to set them from the ",(0,s.jsx)(n.strong,{children:"Databases"})," menu option fromm the NavBar"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"the-footer-tables",children:"The Footer Tables"}),"\n",(0,s.jsx)(n.p,{children:"These show some details of the cluster, like the number of nodes, their CPU and RAM usage."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Currently, these values are the ones got at connection time only and are not refreshed.\nThe tables also show the existing buckets and their quotas."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"tip",children:"Tip"}),"\n",(0,s.jsx)(n.admonition,{title:"Tip",type:"tip",children:(0,s.jsxs)(n.p,{children:["Set the ",(0,s.jsx)(n.strong,{children:"Active Connection"})," Context from this UI."]})})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},3175:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/self-managed-connect-details-922f164b436507ab0658a78a35715026.png"},5994:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/self-managed-connect-3f7d4bf18118f04688426bb42efd124c.png"},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>c});var s=t(7294);const o={},i=s.createContext(o);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);